<!-- all of our Aura components start and end with the <aura:component> tags (analogous to how Visualforce
pages start and end with <apex:page>) -->
<aura:component>
    
    
    <!-- Aura Attributes
		Attributes serve as variable-like container stored and used within the view. 
		We can reference these using expression syntax and value providers. -->
    <aura:attribute name="bgcolor" type="string" default="background-color:tan" />
    
    
    <!-- our top level element (usually a div) declares the slds-grid class to make use of the grid

	slds-wrap tells the system to wrap our columns to a new line once their fractional sizes add up to one
  		(i.e. the sizes for the divs containing 9 and 27 add up to 1 (1/2 + 1/2), so the next div starts 
		on a new line)

	slds-gutters adds padding (like in the CSS box model, to our elements); the default is 12 pixel left and 
		right padding, slds-gutters_x-large gives 64 pixel padding on each side

	slds-grid_vertical changes the flow of our grid from horizontal left-to-right to top-to-bottom
		i.e. it changes our columns to rows
  		this cancels out slds-wrap b/c each element is now its on row and therefore automatically starts on 
		a new line
		we could also do slds-grid_vertical-reverse to switch to a bottom-to-top flow (i.e. our last-defined 
		element (the div with Something in this case) will become the top row and so on)
		we could alternatively reverse the elements while keeping them as rows by using slds-grid_reverse

	slds-grid_vertical-align-center changes our rows from being left-aligned to center-aligned
		slds-grid_align-center will do the same for our columns
		slds-grid_align-space evenly spaces our columns
		slds-grid_align-end right-aligns our columns
		slds-grid_vertical-align-end aligns our rows to the bottom of the page

	there are a ton of other grid classes we can use, check out the grid page at 
	https://www.lightningdesignsystem.com/utilities/grid/ for all the available functionality -->
    <div class="slds-grid slds-wrap slds-gutters_x-large slds-grid_vertical slds-grid_vertical-align-center">
        
        
        <!-- each of our columns/rows must implement the slds-col class
		the slds-size classes allow us to specify the size of our columns
   			e.g. slds-size_1-of-2 says that this row will take up 1/2 of the page
		the slds-order classes allow us to give more custom ordering that we can do through reversing grid 
		flow
			e.g. slds-order_3 means that this element will be the third row even though it's the first element
			we defined -->
        <div class="slds-col slds-size_1-of-2 slds-order_3" style="background-color:#D3D3D3">9</div>
        
        
        <!-- Here we are going to pass in a value stored in our above component. We use the by now familiar
			expression syntax along with a new addition, the value provider.
			The possible value providers are as follows:
				v. - v represents the view, and refers to getting a value from our component.
				c. - c represents the controller, and refers to calling functions from our JavaScript controller.
				c. - c represents the controller, and... wait, no, it isn't a mistake. c holds a dual purpose that 
				changes based on where we are declaring the value provider. When used inside the view it always
				references the JavaScript controller. However, when we use the c value provider inside of the 
				JavaScript controller itself we are instead going to be referencing the Apex controller.

				Now is a good time to talk about a change in our design pattern. Through most of our time working
				in Salesforce we have been using the MVC design pattern. With Aura Components we are now shifting 
				into the MVCC design pattern. Model > View > Controller(Client) > Controller(Server).
				Model - Still the database, the beating heart of our org.
				View - The component, the UI the user interacts with.
				Controller(Client) - This is a client side JavaScript controller that operates within the user's browser.
				Controller(Server) - This is a server side Apex controller that operates within the cloud. -->
        <div class="slds-col slds-size_1-of-2 slds-order_1" style="{!v.bgcolor}">27</div>
        
        
        <div class="slds-col slds-size_12-of-12 slds-order_4" style="background-color:#D3D3D3">I am one with the force.</div>
        <div class="slds-col slds-size_5-of-12 slds-order_2" style="background-color:tan">Something.</div>
    </div>
</aura:component>
